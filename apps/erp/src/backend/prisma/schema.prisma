generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node ../../node_modules/prisma-docs-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cms_category {
  id                   BigInt                 @id @default(autoincrement())
  territory            String                 @db.VarChar(45)
  key                  String                 @db.VarChar(45)
  code                 String                 @db.VarChar(45)
  title                Json?
  on_used              Boolean                @default(true)
  sequence             Int?                   @default(0)
  statistics           Json?
  parameter_values     Json?
  updated_user         String                 @default("SYSTEM") @db.VarChar(45)
  updated_date         DateTime               @default(now()) @db.DateTime(0)
  cms_category_mapping cms_category_mapping[]

  @@unique([territory, key, code], map: "idx_category_territory_key_code")
  @@index([code], map: "idx_category_code")
}

model cms_category_mapping {
  id               BigInt       @default(autoincrement())
  resource_id      BigInt
  category_id      BigInt
  parameter_values Json?
  sequence         Int?         @default(0)
  enable           Boolean?     @default(true)
  updated_user     String       @default("SYSTEM") @db.VarChar(255)
  updated_date     DateTime     @default(now()) @db.DateTime(0)
  cms_category     cms_category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_fanloop_oa_cms_category_mapping_category_id_cms_category_id")
  cms_resource     cms_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_fanloop_oa_cms_category_mapping_resource_id_cms_resource_id")

  @@id([id, resource_id])
  @@unique([resource_id, category_id], map: "idx_cms_category_mapping_resource_id_category_id")
  @@index([category_id], map: "idx_cms_category_mapping_hash_tag_id")
  @@index([updated_date], map: "idx_cms_category_mapping_updated_date")
}

model cms_channel {
  id                BigInt    @id
  licensor_id       BigInt
  code              String    @unique(map: "idx_channel_code") @db.VarChar(45)
  handle            String    @unique(map: "idx_channel_handle") @db.VarChar(45)
  title             Json?
  image             Json?
  description       Json?
  statistics        Json?
  parameter_values  Json?
  seo_info          Json?
  territory         String    @default("GLOBAL") @db.VarChar(200)
  default_territory String    @db.Char(2)
  created_date      DateTime? @default(now()) @db.DateTime(0)
  updated_user      String    @default("SYSTEM") @db.VarChar(45)
  updated_date      DateTime  @default(now()) @db.DateTime(0)
  title_en          String?   @db.VarChar(200)
  title_zhtw        String?   @db.VarChar(200)
  title_inid        String?   @db.VarChar(200)

  @@index([default_territory], map: "idx_channel_default_territory")
  @@index([territory], map: "idx_channel_territory")
  @@index([title_en], map: "idx_channel_title_en")
  @@index([title_inid], map: "idx_channel_title_inid")
  @@index([title_zhtw], map: "idx_channel_title_zhtw")
  @@index([updated_date], map: "idx_channel_updated_date")
}

model cms_curation {
  id                   BigInt                 @id @default(autoincrement())
  key                  String?                @unique(map: "idx_curation_key") @db.VarChar(50)
  code                 String?                @db.VarChar(100)
  title                Json?
  company_id           String                 @db.VarChar(50)
  territory            String                 @default("GLOBAL") @db.VarChar(200)
  default_territory    String?                @db.VarChar(10)
  status               String                 @default("INITIAL") @db.VarChar(50)
  detail_parameter     Json?
  updated_user         String                 @default("SYSTEM") @db.VarChar(255)
  updated_date         DateTime               @default(now()) @db.DateTime(0)
  title_en             String?                @db.VarChar(200)
  title_zhtw           String?                @db.VarChar(200)
  title_inid           String?                @db.VarChar(200)
  cms_curation_mapping cms_curation_mapping[]

  @@index([code], map: "idx_curation_code")
  @@index([status], map: "idx_curation_status")
  @@index([territory], map: "idx_curation_territory")
  @@index([title_en], map: "idx_curation_title_en")
  @@index([title_zhtw], map: "idx_curation_title_inid")
  @@index([title_zhtw], map: "idx_curation_title_zhtw")
  @@index([updated_date], map: "idx_curation_updated_date")
}

model cms_curation_mapping {
  id               BigInt       @id @default(autoincrement())
  resource_id      BigInt
  curation_id      BigInt
  edited           Boolean?     @default(false)
  sequence         Int?         @default(99999999)
  parameter_values Json?
  updated_user     String       @default("SYSTEM") @db.VarChar(255)
  updated_date     DateTime     @default(now()) @db.DateTime(0)
  cms_curation     cms_curation @relation(fields: [curation_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_curation_mapping_resource_id_resource_id")

  @@unique([resource_id, curation_id, edited], map: "idx_curation_mapping_resource_id_curation_id_edited")
  @@index([curation_id], map: "idx_curation_mapping_curation_id")
  @@index([resource_id], map: "idx_curation_mapping_resource_id")
  @@index([updated_date], map: "idx_curation_mapping_updated_date")
}

model cms_curation_scheduling {
  id                           BigInt                         @id @default(autoincrement())
  curation_id                  BigInt
  title                        Json?
  key                          String?                        @db.VarChar(50)
  territory                    String?                        @db.VarChar(50)
  description                  String                         @db.VarChar(100)
  status                       String                         @db.VarChar(45)
  published_date               DateTime?                      @db.DateTime(0)
  synchronized                 Boolean                        @default(false)
  enabled                      Boolean                        @default(true)
  created_user                 String                         @default("SYSTEM") @db.VarChar(45)
  created_date                 DateTime                       @default(now()) @db.DateTime(0)
  updated_user                 String                         @default("SYSTEM") @db.VarChar(45)
  updated_date                 DateTime                       @default(now()) @db.DateTime(0)
  cms_curation_scheduling_item cms_curation_scheduling_item[]

  @@unique([key, territory, published_date], map: "idx_cms_curation_scheduling_key_territory_published_date")
  @@index([key], map: "idx_cms_curation_scheduling_key")
  @@index([status], map: "idx_cms_curation_scheduling_status")
  @@index([territory, key, synchronized], map: "idx_cms_curation_scheduling_synchronized")
  @@index([updated_date], map: "idx_cms_curation_scheduling_updated_date")
}

model cms_curation_scheduling_item {
  id                      BigInt                  @id @default(autoincrement())
  parent_id               BigInt
  resource_id             BigInt
  curation_id             BigInt
  parameter_values        Json?
  sequence                Int?                    @default(99999999)
  updated_user            String                  @default("SYSTEM") @db.VarChar(255)
  updated_date            DateTime                @default(now()) @db.DateTime(0)
  cms_curation_scheduling cms_curation_scheduling @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_cms_curation_scheduling_item_parent_id")

  @@unique([parent_id, resource_id, curation_id], map: "idx_cms_curation_scheduling_item_resource_id_curation_id")
  @@index([curation_id], map: "idx_cms_curation_scheduling_item_curation_id")
  @@index([resource_id], map: "idx_cms_curation_scheduling_item_resource_id")
  @@index([updated_date], map: "idx_cms_curation_scheduling_item_updated_date")
}

model cms_hash_tag {
  id                   BigInt                 @id @default(autoincrement())
  title                String                 @unique(map: "idx_cms_hash_tag_title") @db.VarChar(200)
  sequence             Int?                   @default(0)
  statistics           Json?
  updated_user         String                 @default("SYSTEM") @db.VarChar(255)
  updated_date         DateTime               @default(now()) @db.DateTime(0)
  cms_hash_tag_mapping cms_hash_tag_mapping[]

  @@index([updated_date], map: "idx_cms_hash_tag_updated_date")
}

model cms_hash_tag_mapping {
  id               BigInt       @default(autoincrement())
  resource_id      BigInt
  hash_tag_id      BigInt
  parameter_values Json?
  sequence         Int?         @default(0)
  enable           Boolean?     @default(true)
  updated_user     String       @default("SYSTEM") @db.VarChar(255)
  updated_date     DateTime     @default(now()) @db.DateTime(0)
  cms_hash_tag     cms_hash_tag @relation(fields: [hash_tag_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_fanloop_oa_cms_hash_tag_mapping_hash_tag_id_cms_hash_tag_id")
  cms_resource     cms_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_fanloop_oa_cms_hash_tag_mapping_resource_id_cms_resource_id")

  @@id([id, resource_id])
  @@unique([resource_id, hash_tag_id], map: "idx_hash_tag_mapping_resource_id_hash_tag_id")
  @@index([hash_tag_id], map: "idx_cms_hash_tag_mapping_hash_tag_id")
  @@index([updated_date], map: "idx_cms_hash_tag_mapping_updated_date")
}

model cms_label_info {
  id               BigInt   @id @default(autoincrement())
  key              String?  @unique(map: "idx_cms_label_info_key") @db.VarChar(45)
  title            Json?
  sequence         Int?     @default(0)
  statistics       Json?
  parameter_values Json?
  updated_user     String   @db.VarChar(45)
  updated_date     DateTime @default(now()) @db.DateTime(0)
  title_en         String?  @db.VarChar(200)
  title_zhtw       String?  @db.VarChar(200)
  title_inid       String?  @db.VarChar(200)

  @@index([title_en], map: "idx_cms_label_info_title_eng")
  @@index([title_inid], map: "idx_cms_label_info_title_inid")
  @@index([title_zhtw], map: "idx_cms_label_info_title_zhtw")
  @@index([updated_date], map: "idx_cms_label_info_updated_date")
}

model cms_label_info_mapping {
  id                BigInt   @id @default(autoincrement())
  mapping_type      String   @db.VarChar(50)
  detail_mapping_id String   @db.VarChar(200)
  label_info_id     BigInt
  parameter_values  Json?
  sequence          Int?     @default(0)
  enable            Boolean? @default(true)
  updated_user      String   @default("SYSTEM") @db.VarChar(255)
  updated_date      DateTime @default(now()) @db.DateTime(0)

  @@unique([detail_mapping_id, label_info_id], map: "idx_cms_label_info_mapping_detail_mapping_id_label_info_id")
  @@index([label_info_id], map: "idx_cms_label_info_mapping_label_info_id")
  @@index([mapping_type, detail_mapping_id], map: "idx_cms_label_info_mapping_mapping_type_detail_mapping_id")
  @@index([updated_date], map: "idx_cms_label_info_mapping_updated_date")
}

model cms_published_setting {
  id               BigInt       @id @default(autoincrement())
  resource_id      BigInt
  territory        String       @default("TW") @db.VarChar(10)
  published_date   DateTime     @db.DateTime(0)
  unpublished_date DateTime     @db.DateTime(0)
  show_start_date  DateTime?    @db.DateTime(0)
  show_end_date    DateTime?    @db.DateTime(0)
  play_start_date  DateTime?    @db.DateTime(0)
  play_end_date    DateTime?    @db.DateTime(0)
  parameter_values Json?
  updated_user     String       @default("SYSTEM") @db.VarChar(255)
  updated_date     DateTime     @default(now()) @db.DateTime(0)
  cms_resource     cms_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_cms_published_setting_resource_id_cms_resource_id")

  @@unique([resource_id, territory, published_date, unpublished_date], map: "idx_cms_published_setting_resource_id_territory_published_date")
  @@index([published_date], map: "idx_cms_published_setting_published_date")
  @@index([resource_id], map: "idx_cms_published_setting_resource_id")
  @@index([unpublished_date], map: "idx_cms_published_setting_unpublished_date")
  @@index([updated_date], map: "idx_cms_resource_mapping_updated_date")
}

model cms_resource {
  id                      BigInt                    @id @default(autoincrement())
  key                     String?                   @unique(map: "idx_cms_resource_key") @db.VarChar(50)
  code                    String?                   @unique(map: "idx_cms_resource_code") @db.VarChar(50)
  type                    String                    @db.VarChar(50)
  title                   Json?
  channel_code            String                    @db.VarChar(45)
  licensor_id             BigInt
  company_id              String                    @db.VarChar(50)
  territory               String                    @default("GLOBAL") @db.VarChar(200)
  default_territory       String?                   @db.Char(2)
  status                  String                    @default("INITIAL") @db.VarChar(50)
  partner_resource_id     String?                   @db.VarChar(50)
  published_date          DateTime?                 @db.DateTime(0)
  unpublished_date        DateTime?                 @db.DateTime(0)
  enable                  Int                       @default(1) @db.TinyInt
  updated_user            String                    @default("SYSTEM") @db.VarChar(255)
  updated_date            DateTime                  @default(now()) @db.DateTime(0)
  title_en                String?                   @db.VarChar(200)
  title_zhtw              String?                   @db.VarChar(200)
  title_inid              String?                   @db.VarChar(200)
  cms_category_mapping    cms_category_mapping[]
  cms_hash_tag_mapping    cms_hash_tag_mapping[]
  cms_published_setting   cms_published_setting[]
  cms_resource_import_log cms_resource_import_log[]
  cms_resource_parameter  cms_resource_parameter[]
  cms_resource_statistics cms_resource_statistics[]

  @@unique([partner_resource_id, channel_code], map: "idx_cms_resource_partner_resource_id")
  @@index([published_date, unpublished_date], map: "idx_cms_resource_published_date_unpublished_date")
  @@index([status], map: "idx_cms_resource_status")
  @@index([territory], map: "idx_cms_resource_territory")
  @@index([title_en], map: "idx_cms_resource_title_eng")
  @@index([title_inid], map: "idx_cms_resource_title_inid")
  @@index([title_zhtw], map: "idx_cms_resource_title_zhtw")
  @@index([type], map: "idx_cms_resource_type")
  @@index([updated_date], map: "idx_cms_resource_updated_date")
}

model cms_resource_import_log {
  id                  BigInt        @id @default(autoincrement())
  partner_resource_id String?       @db.VarChar(50)
  channel_code        String?       @db.VarChar(45)
  resource_id         BigInt?
  execute_process     String        @db.VarChar(45)
  execute_status      String        @db.VarChar(45)
  imp_result          Json?
  poster_import       Int           @default(0) @db.TinyInt
  poster_type         String?       @db.VarChar(45)
  video_import        Int           @default(0) @db.TinyInt
  oa_task_job_id      BigInt        @default(0)
  updated_user        String        @default("SYSTEM") @db.VarChar(255)
  updated_date        DateTime      @default(now()) @db.DateTime(0)
  cms_resource        cms_resource? @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_cms_resource_import_log_resource_id_cms_resource_id")

  @@index([channel_code], map: "idx_cms_resource_import_log_channel_code")
  @@index([partner_resource_id], map: "idx_cms_resource_import_log_partner_resource_id")
  @@index([resource_id], map: "idx_cms_resource_import_log_resource_id")
}

model cms_resource_parameter {
  resource_id        BigInt
  territory          String       @default("GLOBAL") @db.VarChar(10)
  master_code        String?      @db.VarChar(45)
  master_key         String?      @db.VarChar(45)
  master_type        String?      @db.VarChar(45)
  video_id           String?      @db.VarChar(45)
  duration           String?      @db.VarChar(45)
  show_direction     String?      @db.VarChar(20)
  sub_statuses       Json?
  detail             Json?
  description        Json?
  player_info        Json?
  posters            Json?
  category_info      Json?
  label_info         Json?
  hash_tag_info      Json?
  seo_info           Json?
  parameter_values   Json?
  updated_user       String       @default("SYSTEM") @db.VarChar(255)
  updated_date       DateTime     @default(now()) @db.DateTime(0)
  artwork_status     String?      @db.VarChar(45)
  transcoding_status String?      @db.VarChar(45)
  cms_resource       cms_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cms_resource_parameter_resource_id_cms_resource_id")

  @@id([resource_id, territory])
  @@index([artwork_status], map: "idx_cms_resource_parameter_artwork_status")
  @@index([territory, video_id], map: "idx_cms_resource_parameter_territory_video_id")
  @@index([transcoding_status], map: "idx_cms_resource_parameter_transcoding_status")
  @@index([updated_date], map: "idx_cms_resource_parameter_updated_date")
}

model cms_resource_statistics {
  resource_id  BigInt
  territory    String       @default("GLOBAL") @db.VarChar(10)
  statistics   Json?
  updated_user String       @default("SYSTEM") @db.VarChar(255)
  updated_date DateTime     @default(now()) @db.DateTime(0)
  cms_resource cms_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_cms_resource_statistics_resource_id_cms_resource_id")

  @@id([resource_id, territory])
  @@index([updated_date], map: "idx_cms_resource_updated_date")
}

model oa_change_logs {
  id                BigInt   @id @default(autoincrement())
  territory         String   @db.Char(2)
  function_name     String   @db.VarChar(45)
  mapping_id        String   @db.VarChar(45)
  sub_function_name String?  @db.VarChar(45)
  sub_mapping_id    String?  @db.VarChar(45)
  comment           String   @db.Text
  action            String   @db.VarChar(45)
  before            Json?
  after             Json?
  jira_no           String?  @db.VarChar(30)
  updated_user      String   @default("SYSTEM") @db.VarChar(45)
  updated_date      DateTime @default(now()) @db.DateTime(0)

  @@index([function_name], map: "idx_change_logs_function_name")
  @@index([jira_no], map: "idx_change_logs_jira_no")
  @@index([mapping_id], map: "idx_change_logs_mapping_id")
  @@index([sub_function_name], map: "idx_change_logs_sub_function_name")
  @@index([sub_mapping_id], map: "idx_change_logs_sub_mapping_id")
  @@index([territory], map: "idx_change_logs_territory")
  @@index([updated_date], map: "idx_change_logs_updated_date")
}

model oa_licensor {
  id             BigInt   @id @default(autoincrement())
  licensor_key   String   @db.VarChar(45)
  code           String?  @db.VarChar(45)
  company_name   String?  @db.VarChar(45)
  category       String?  @db.VarChar(45)
  contact_name   String?  @db.VarChar(45)
  contact_phone  String?  @db.VarChar(45)
  contact_email  String?  @db.VarChar(45)
  contact_mobile String?  @db.VarChar(45)
  s3_bucket_name String?  @db.VarChar(45)
  enable         Boolean? @default(true)
  updated_user   String   @default("SYSTEM") @db.VarChar(45)
  updated_date   DateTime @default(now()) @db.DateTime(0)

  @@unique([code, licensor_key], map: "idx_licensor_code_key")
}

model oa_system_code {
  code_type            String   @db.VarChar(45)
  territory            String   @db.VarChar(45)
  code_type_name       Json?
  show_sequence        Int      @default(0)
  used_flag            Boolean  @default(true)
  up_level_type        String?  @db.VarChar(45)
  memo                 String?  @db.VarChar(500)
  enable               Boolean  @default(true)
  created_user         String   @default("SYSTEM") @db.VarChar(255)
  created_date         DateTime @default(now()) @db.DateTime(0)
  updated_user         String   @default("SYSTEM") @db.VarChar(255)
  updated_date         DateTime @default(now()) @db.DateTime(0)
  code_type_name_local String?  @db.VarChar(200)
  code_type_name_eng   String?  @db.VarChar(200)

  @@id([code_type, territory])
}

model oa_system_code_detail {
  id              BigInt   @id @default(autoincrement())
  code_type       String   @db.VarChar(45)
  territory       String   @db.VarChar(45)
  code            String   @db.VarChar(45)
  code_group      String?  @db.VarChar(45)
  value_type      String?  @db.VarChar(45)
  code_name       Json?
  code_parameter  Json?
  show_sequence   Int      @default(0)
  used_flag       Boolean  @default(true)
  up_level_type   String?  @db.VarChar(45)
  memo            String?  @db.Text
  enable          Boolean  @default(true)
  created_user    String   @default("SYSTEM") @db.VarChar(45)
  created_date    DateTime @default(now()) @db.DateTime(0)
  updated_user    String   @default("SYSTEM") @db.VarChar(45)
  updated_date    DateTime @default(now()) @db.DateTime(0)
  code_name_local String?  @db.VarChar(200)
  code_name_eng   String?  @db.VarChar(200)

  @@index([code_type, territory], map: "fk_system_code_detail_system_code1_idx")
  @@index([code], map: "idx_oa_system_code_detail_code")
  @@index([code_type], map: "idx_oa_system_code_detail_code_type")
  @@index([territory], map: "idx_oa_system_code_detail_territory")
}

model oa_task_job {
  id               BigInt    @id @default(autoincrement())
  task_label       String    @db.VarChar(60)
  job_name         String    @db.VarChar(60)
  task_name        String    @db.VarChar(60)
  task_target      String    @db.VarChar(20)
  execution_time   DateTime? @db.DateTime(0)
  execution_script String?   @db.MediumText
  execution_log    Json?
  executed         Int       @default(0) @db.UnsignedTinyInt
  exec_start_date  DateTime? @db.DateTime(0)
  exec_end_date    DateTime? @db.DateTime(0)
  enable           Int       @default(1) @db.UnsignedTinyInt
  created_user     String    @db.VarChar(50)
  created_date     DateTime  @default(now()) @db.DateTime(0)
  updated_user     String    @db.VarChar(50)
  updated_date     DateTime  @default(now()) @db.DateTime(0)

  @@index([execution_time, executed, enable, exec_start_date, exec_end_date], map: "idx_execution_time_executed_enable_start_date_end_date")
  @@index([task_label, job_name, task_name], map: "idx_task_job_task_label_job_name_task_name")
}

model oa_territory {
  id                String   @id @db.VarChar(45)
  code              String   @unique(map: "idx_country_country_code") @db.VarChar(45)
  title             String?  @db.VarChar(45)
  default_territory String   @db.VarChar(45)
  language          String   @db.VarChar(100)
  default_language  String   @db.VarChar(10)
  timezone          String?  @default("+08:00") @db.VarChar(45)
  priority          Int?
  updated_user      String   @default("SYSTEM") @db.VarChar(45)
  updated_date      DateTime @default(now()) @db.DateTime(0)
}

model system_function {
  id           String   @id @db.VarChar(45)
  menu_id      String   @db.VarChar(45)
  name         String   @db.VarChar(45)
  show_name    String   @db.VarChar(45)
  icon         String?  @db.VarChar(255)
  type         String   @db.VarChar(45)
  enable       Boolean
  created_user String   @default("SYSTEM") @db.VarChar(45)
  created_date DateTime @default(now()) @db.DateTime(0)
  updated_user String   @default("SYSTEM") @db.VarChar(45)
  updated_date DateTime @default(now()) @db.DateTime(0)

  @@index([menu_id], map: "function_menu_id")
  @@index([updated_date], map: "function_updated_date")
}

model system_menu {
  id            String   @id @db.VarChar(45)
  cascade_id    String?  @db.VarChar(100)
  name          String   @db.VarChar(45)
  pathname      String   @db.VarChar(255)
  icon          String?  @db.VarChar(255)
  show_in_menu  Boolean  @default(false)
  is_web_page   Boolean  @default(false)
  is_need_login Boolean  @default(false)
  parent_id     String?  @db.VarChar(45)
  table_memo    String?  @db.VarChar(100)
  sort          Int
  enable        Boolean  @default(true)
  created_user  String   @default("SYSTEM") @db.VarChar(45)
  created_date  DateTime @default(now()) @db.DateTime(0)
  updated_user  String   @default("SYSTEM") @db.VarChar(45)
  updated_date  DateTime @default(now()) @db.DateTime(0)

  @@index([parent_id], map: "auth_menu_parent_id")
  @@index([updated_date], map: "auth_menu_updated_date")
}

model system_relevance {
  id           String   @id @db.VarChar(45)
  memo         String?  @db.VarChar(255)
  type         String   @db.VarChar(45)
  first_id     String   @db.VarChar(100)
  second_id    String   @db.VarChar(100)
  third_id     String?  @db.VarChar(100)
  enable       Boolean
  created_user String   @default("SYSTEM") @db.VarChar(45)
  created_date DateTime @default(now()) @db.DateTime(0)
  updated_user String   @default("SYSTEM") @db.VarChar(45)
  updated_date DateTime @default(now()) @db.DateTime(0)

  @@index([type, first_id, second_id], map: "auth_relevance_type_first_id_second_id")
  @@index([updated_date], map: "auth_relevance_updated_date")
}

model system_role {
  id           String   @id @db.VarChar(45)
  code         String   @unique(map: "auth_role_code") @db.VarChar(45)
  name         String   @db.VarChar(45)
  enable       Boolean  @default(true)
  created_user String   @default("SYSTEM") @db.VarChar(45)
  created_date DateTime @default(now()) @db.DateTime(0)
  updated_user String   @default("SYSTEM") @db.VarChar(45)
  updated_date DateTime @default(now()) @db.DateTime(0)

  @@index([updated_date], map: "auth_role_updated_date")
}

model system_user {
  id             String   @id @db.VarChar(45)
  provider_id    String   @unique(map: "auth_user_provider_id") @db.VarChar(255)
  provider       String   @db.VarChar(45)
  display_name   String   @db.VarChar(45)
  family_name    String   @db.VarChar(45)
  given_name     String   @db.VarChar(45)
  email          String   @unique(map: "auth_user_email_key") @db.VarChar(255)
  email_verified Boolean?
  password       String   @db.VarChar(255)
  language       String   @db.VarChar(10)
  locale         String?  @db.VarChar(10)
  picture        String?  @db.VarChar(255)
  enable         Boolean  @default(true)
  created_user   String   @default("SYSTEM") @db.VarChar(45)
  created_date   DateTime @default(now()) @db.DateTime(0)
  updated_user   String   @default("SYSTEM") @db.VarChar(45)
  updated_date   DateTime @default(now()) @db.DateTime(0)

  @@index([updated_date], map: "auth_user_updated_date")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}